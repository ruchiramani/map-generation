const dataHash = {
  start: null,
  origin_address: null,
  end: null,
  destination_address: null,
  distance_covered: null,
  route: null,
  total_distance: null
}

var map;
function startMap(){
   map = new google.maps.Map(document.getElementById('map'), {
         center: {lat: -34.397, lng: 150.644},
         zoom: 8
       });
};


///////////
//
$( document ).ready(function() {
  $('#form1').hide();
    $('#form2').hide();

    $('#button1').click(function(e){
      $('#form2').hide();
        $('#form1').show();
        e.preventDefault();

    });
    $('#button2').click(function(e){
      $('#form1').hide();
        $('#form2').show();
        e.preventDefault();

    });
  $('#form1').submit(function(e){
    $.ajax({
    url: $(this).attr('action'),
    type: "POST",
    data: $(this).serialize(),
    success: function(json) {
     dataHash.start = json.start;
     dataHash.end = json.end;
     dataHash.distance_covered = json.distance_covered
      initMap()
    } // add errors here
  })
e.preventDefault();

});
$('#form2').submit(function(e){
  $.ajax({
  url: $(this).attr('action'),
  type: "POST",
  data: $(this).serialize(),
  success: function(json) {
   dataHash.start = json.start;
   dataHash.end = json.end;
   dataHash.distance_covered = json.distance_covered
    initMap()
  } // add errors here
})
e.preventDefault();

});

});



// function appendMap() {
//   var script = document.createElement('script');
//   script.async = true;
//   script.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyDjOQ1AHDnEIDiHkrBX9FLGX8JbqrtTCmY&libraries=geometry&callback=initMap"
//   document.head.appendChild(script)
// };

function initMap() {
  var origin = new google.maps.LatLng(parseFloat(dataHash.start.lat), parseFloat(dataHash.start.lng));
  var destination = new google.maps.LatLng(parseFloat(dataHash.end.lat), parseFloat(dataHash.end.lng));
  var origin_address;
  var destination_address;
  var directionsService = new google.maps.DirectionsService;
  var directionsDisplay = new google.maps.DirectionsRenderer;

directionsDisplay.setMap(map);
function calculateAndDisplayRoute(directionsService, directionsDisplay) {
  directionsService.route({
    origin: dataHash.start,
    destination: dataHash.end,
    travelMode: 'DRIVING'
  }, function(response, status) {
    if (status === 'OK') {
     dataHash.route = response;
     directionsDisplay.setDirections(response);
     calculateDistance();

    } else {
      window.alert('Directions request failed due to ' + status);
    }
  });
};
  function findAddress(){
    dataHash.start = new google.maps.LatLng(parseFloat(dataHash.route.routes[0].legs[0].start_location.lat), parseFloat(dataHash.route.routes[0].legs[0].start_location.lng));
    dataHash.origin_address = dataHash.route.routes[0].legs[0].start_address
    dataHash.end = new google.maps.LatLng(parseFloat(dataHash.route.routes[0].legs[0].end_location.lat), parseFloat(dataHash.route.routes[0].legs[0].end_location.lng));
    dataHash.destination_address = dataHash.route.routes[0].legs[0].end_address
 };
 calculateAndDisplayRoute(directionsService, directionsDisplay);

    function calculateDistance() {

      if (dataHash.distance_covered) {
        //calcualte polyline
      var polyline = new google.maps.Polyline({
        path: [],
        strokeColor: '#FF0000',
        strokeWeight: 3
        });
        polyline.setPath([]);

        var bounds = new google.maps.LatLngBounds();

        var legs = dataHash.route.routes[0].legs
        var steps = legs[0].steps;
         for (j=0;j<steps.length;j++) {
           var nextSegment = steps[j].path;
           for (k=0;k<nextSegment.length;k++) {
             polyline.getPath().push(nextSegment[k]);
             bounds.extend(nextSegment[k]);
           }
         }
         findAddress();

          // polyline.setMap(map);
          putMarkerOnRoute();

      function putMarkerOnRoute() {
       dataHash.total_distance =  google.maps.geometry.spherical.computeDistanceBetween(origin, destination);
        var percentage = 100 * dataHash.distance_covered / dataHash.total_distance
        var distance = (percentage/100) * dataHash.total_distance;
        debugger;
        var distance_point = polyline.GetPointAtDistance(distance)
        marker = new google.maps.Marker({
        position: distance_point,
        map: map,
        title: "here",
          })
          appendDistance();
          }
       };

   }


    // === A method which returns a google.maps.LatLng of a point a given distance along the path ===
// === Returns null if the path is shorter than the specified distance ===
google.maps.Polyline.prototype.GetPointAtDistance = function(metres) {
  // some awkward special cases
  if (metres == 0) return this.getPath().getAt(0);
  if (metres < 0) return null;
  if (this.getPath().getLength() < 2) return null;
  var dist=0;
  var olddist=0;
  for (var i=1; (i < this.getPath().getLength() && dist < metres); i++) {
    olddist = dist;
    dist += google.maps.geometry.spherical.computeDistanceBetween(
              this.getPath().getAt(i),
              this.getPath().getAt(i-1)
            );
  }
  if (dist < metres) {
    return null;
  }
  var p1= this.getPath().getAt(i-2);
  var p2= this.getPath().getAt(i-1);
  var m = (metres-olddist)/(dist-olddist);
  return new google.maps.LatLng( p1.lat() + (p2.lat()-p1.lat())*m, p1.lng() + (p2.lng()-p1.lng())*m);
}

function appendDistance(){
  if (dataHash.distance_covered){
  var div1 = document.getElementById("distance1text");
  div1.innerHTML = "Distance From Origin to Given Point";
  var div1v = document.getElementById("distance1");
  div1v.innerHTML = dataHash.distance_covered;
  var div2 = document.getElementById("distance2text");
  div2.innerHTML = "Distance From Given Point to Destination";
  var div2v = document.getElementById("distance2");
  div2v.innerHTML = dataHash.total_distance - dataHash.distance_covered;
   }
  var div3 = document.getElementById("distance3text");
  div3.innerHTML = "Total Distance from origin to Destination"
  var div3v = document.getElementById("distance3");
  div3v.innerHTML = dataHash.total_distance;




}
}


 //  //distance2
 //  var newNode = document.createElement('div');
 //  newNode.innerHTML = "Distance From Origin to Point";
 //  theDiv.appendChild( newNode )
 // // distance three
 //  var newNode = document.createElement('div');
 //  newNode.innerHTML = "Distance From Origin to Point";
 //  theDiv.appendChild( newNode )
